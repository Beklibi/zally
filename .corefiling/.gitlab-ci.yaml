stages:
  - build
  - docker

.template_build: &build
  stage: build
  tags:
    - docker
  before_script:
    - component="$( echo "$CI_JOB_NAME" | awk '{split($0,a," "); print a[2]}' )"
    - cd "$component"

.template_docker: &docker
  <<: *build
  stage: docker
  image: docker:latest
  services:
    - docker:dind
  tags:
    - docker
    - docker-privileged
  variables:
    GIT_STRATEGY: none
  artifacts:
    expire_in: 1 week
    paths:
      - '*.imageTag'
  script:
    - tag="$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID"
    - image="artifacts.int.corefiling.com:5000/$CI_PROJECT_PATH/$component:$tag"
    - echo "$tag" > "../$component.imageTag"
    - echo "Building $image"
    - docker build -t "$image" .
    - docker push "$image"

build server:
  <<: *build
  image: openjdk:8-alpine
  variables:
    JAVA_OPTS: -Dorg.gradle.daemon=false
    GRADLE_USER_HOME: /opt/gradle/caches
  script: ./gradlew --stacktrace clean build
  artifacts:
    expire_in: 1 week
    paths:
      - server/Dockerfile
      - server/build/libs

build web-ui:
  <<: *build
  image: artifacts.int.corefiling.com:5000/jma/zally/build-ui:local
  script:
    - yarn install --frozen-lockfile --non-interactive
    - yarn run build
  cache:
    key: "$CI_COMMIT_REF_SLUG/node"
    paths:
      - web-ui/node_modules
  artifacts:
    expire_in: 1 week
    paths:
      - web-ui/Dockerfile
      - web-ui/package.json
      - web-ui/yarn.lock
      - web-ui/server.js
      - web-ui/src

docker server: *docker
docker web-ui: *docker
